/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    chosen { zmk,physical-layout = &default_layout; };
};

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 29 28 27 26 25 24 36 37 38>;
            hold-trigger-on-release;
            quick-tap-ms = <175>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <6 7 9 8 10 11 23 22 21 20 19 18 30 31 32 34 33 35 41 40 39 38 37 36>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        service_layer_toggle {
            bindings = <&mo 3>;
            key-positions = <37 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&kp ESC    &kp Q         &kp W            &kp E                &kp R              &kp T          &kp Y      &kp U               &kp I                 &kp O             &kp P                 &kp LEFT_BRACKET
&kp GLOBE  &hml LCTRL A  &hml LEFT_ALT S  &hml LEFT_COMMAND D  &hml LEFT_SHIFT F  &kp G          &kp H      &hmr RIGHT_SHIFT J  &hmr RIGHT_COMMAND K  &hmr RIGHT_ALT L  &hmr RCTRL SEMICOLON  &kp SQT
&kp GRAVE  &kp Z         &kp X            &kp C                &kp V              &kp B          &kp N      &kp M               &kp COMMA             &kp PERIOD        &hmr QUESTION SLASH   &kp RIGHT_BRACKET
                                          &kp TAB              &mo 2              &kp SPACE      &kp ENTER  &mo 1               &hmr KP_DOT KP_COMMA
            >;
        };

        nums {
            bindings = <
&hml LEFT_PARENTHESIS RIGHT_PARENTHESIS  &kp KP_NUMBER_1         &kp KP_NUMBER_2            &kp KP_NUMBER_3                &kp KP_NUMBER_4              &kp KP_NUMBER_5      &none   &none                            &none                              &none                    &none                   &none
&kp COMMA                                &hml LCTRL KP_NUMBER_6  &hml LEFT_ALT KP_NUMBER_7  &hml LEFT_COMMAND KP_NUMBER_8  &hml LEFT_SHIFT KP_NUMBER_9  &kp KP_NUMBER_0      &none   &hmr RIGHT_SHIFT LG(LEFT_ARROW)  &hmr RIGHT_COMMAND LG(DOWN_ARROW)  &hmr RIGHT_ALT UP_ARROW  &hmr RCTRL RIGHT_ARROW  &none
&kp KP_DOT                               &kp KP_PLUS             &kp KP_MINUS               &kp KP_MULTIPLY                &kp KP_DIVIDE                &kp KP_EQUAL         &none   &none                            &none                              &none                    &none                   &none
                                                                                            &trans                         &trans                       &trans               &trans  &trans                           &trans
            >;
        };

        symbols {
            bindings = <
&trans  &trans     &trans        &trans            &trans          &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp LEFT_SHIFT  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans        &trans            &trans          &trans      &trans  &trans  &trans  &trans  &trans  &trans
                                 &trans            &trans          &trans      &trans  &trans  &trans
            >;
        };

        service {
            bindings = <
&bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6
&kp LEFT_GUI  &trans        &trans        &trans        &trans        &trans            &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans        &trans        &trans        &trans        &trans        &trans            &trans  &trans  &trans  &trans   &trans   &trans
                                          &tog 3        &trans        &trans            &trans  &trans  &trans
            >;
        };
    };
};
